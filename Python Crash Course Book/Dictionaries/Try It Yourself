#6-1. Person: Use a dictionary to store information about a person you know . Store their first name, last name, age, and the city in which they live . You should have keys such as first_name, last_name, age, and city . Print each piece of information stored in your dictionary .
person = {'first_name': 'Yuvraj', 'last_name': 'Pradhan', 'age': 19, 'city': 'champua'}
print(person['first_name'])
print(person['last_name'])
print(person['age'])
print(person['city'])

print("\n")

#6-2. Favorite Numbers: Use a dictionary to store people’s favorite numbers . Think of five names, and use them as keys in your dictionary . Think of a favorite number for each person, and store each as a value in your dictionary . Print each person’s name and their favorite number . For even more fun, poll a few friends and get some actual data for your program .

favourite_numbers = {
  'krishna': 1,
  'radha': 2,
  'shiva': 3,
  'ganesha': 4,
  'hanuman': 5,
}
for name, number in favourite_numbers.items():
  print(f"{name.title()}'s favourite number is {number}.")

print("\n")

#6-3. Glossary: A Python dictionary can be used to model an actual dictionary . However, to avoid confusion, let’s call it a glossary .
  #--Think of five programming words you’ve learned about in the previous chapters . Use these words as the keys in your glossary, and store their meanings as values .
  #--Print each word and its meaning as neatly formatted output . You might print the word followed by a colon and then its meaning, or print the word on one line and then print its meaning indented on a second line . Use the newline character (\n) to insert a blank line between each word-meaning pair in your output .

glossary = {
  'variable': 'A variable is a container that holds a value',
  'value': 'A value is a piece of data that can be stored in a variable',
  'string': 'A string is a sequence of characters',
  'integer': 'An integer is a whole number',
  'float': 'A float is a number with a decimal point',
}
for words, meaning in glossary.items(): #never forget to use .items()
  print(f"{words.title()}:" + "\n" + f"{meaning}" + "\n")

#6-4. Glossary 2: Now that you know how to loop through a dictionary, clean up the code from Exercise 6-3 (page 102) by replacing your series of print statements with a loop that runs through the dictionary’s keys and values . When you’re sure that your loop works, add five more Python terms to your glossary . When you run your program again, these new words and meanings should automatically be included in the output .
glossary = {
  'variable': 'A variable is a container that holds a value',
  'value': 'A value is a piece of data that can be stored in a variable',
  'string': 'A string is a sequence of characters',
  'integer': 'An integer is a whole number',
  'float': 'A float is a number with a decimal point',
  'list': 'A list is a collection of items',
  'boolean': 'A boolean is a value that is either true or false',
  'sort': 'A sort is a function that sorts a list',
  'dictionary': 'A dictionary is a collection of key-value pairs',
  'tuple': 'A tuple is a collection of items that cannot be changed',
  }
print("The words in the dictionary are: ")
for words in glossary.keys():
  print(words.title())

print("\n")

print("The meanings of the words are: ")
for meanings in glossary.values():
  print(meanings + '.' + "\n")
  
#6-5. Rivers: Make a dictionary containing three major rivers and the country each river runs through . One key-value pair might be 'nile': 'egypt' .
  #-- Use a loop to print a sentence about each river, such as The Nile runs through Egypt .
  #-- Use a loop to print the name of each river included in the dictionary .
  #--Use a loop to print the name of each country included in the dictionary .
rivers = {
  'ganga': 'india',
  'nile': 'egypt',
  'amazon': 'brazil',
}
for river,country in rivers.items():
  print(f"The {river.title()} runs through the country of {country.title()}.")

print("\n")

for river in rivers.keys():
  print(river.title())

print("\n")

for country in rivers.values():
  print(country.title())

print("\n")

#6-6. Polling: Use the code in favorite_languages.py (page 104) .
  #--Make a list of people who should take the favorite languages poll . Include some names that are already in the dictionary and some that are not .
  #--Loop through the list of people who should take the poll . If they have already taken the poll, print a message thanking them for responding . If they have not yet taken the poll, print a message inviting them to take the poll .
person = {
  'jen': 'python',
  'sarah': 'c',
  'edward': 'ruby',
  'phil': 'python',
}

people = ['jen', 'sarah', 'edward', 'phil', 'yuvraj', 'kapil', 'krishna']

for person_name in people:
  if person_name in person:
      print(f"Thank you for responding {person_name.title()}.")
  else:
      print(f"{person_name.title()}, please take the poll.")

print("\n")

#6-7. People: Start with the program you wrote for Exercise 6-1 (page 102) . Make two new dictionaries representing different people, and store all three dictionaries in a list called people . Loop through your list of people . As you loop through the list, print everything you know about each person .
person_0 = {'first_name': 'Yuvraj', 'last_name': 'Pradhan', 'age': 19, 'city': 'champua'}
person_1 = {'first_name': 'kapil', 'last_name': 'sharma', 'age': 19, 'city': 'pune'}
person_2 = {'first_name': 'rishi', 'last_name': 'chauhan', 'age': 18, 'city': 'pune'}

persons = [person_0, person_1, person_2]
for person in persons:
  print(person)

print("\n")

#6-8. Pets: Make several dictionaries, where the name of each dictionary is the name of a pet . In each dictionary, include the kind of animal and the owner’s name . Store these dictionaries in a list called pets . Next, loop through your list and as you do print everything you know about each pet .
pet_0 = {'name': 'nandi', 'kind': 'bull', 'owner': 'shiva'}
pet_1 = {'name': 'dinka', 'kind': 'mouse', 'owner': 'ganehsa'}
pet_2 = {'name': 'parvani', 'kind': 'peacock', 'owner': 'kartikeya'}
pet_3 = {'name': 'hamsa', 'kind': 'swan', 'owner': 'saraswati'}
pets = [pet_0, pet_1, pet_2, pet_3]

for pet in pets:
  print(pet)

print("\n")

#6-9. Favorite Places: Make a dictionary called favorite_places . Think of three names to use as keys in the dictionary, and store one to three favorite places for each person . To make this exercise a bit more interesting, ask some friends to name a few of their favorite places . Loop through the dictionary, and print each person’s name and their favorite places .
favourite_places = {
  'yuvraj': ['champua', 'pune', 'mumbai'],
  'kapil': ['pune', 'mumbai', 'champua'],
  'rishi': ['champua', 'mumbai', 'pune'],
}
for name, places in favourite_places.items():
  print(f"{name.title()}'s favorite places are: {places}.")

print("\n")

#6-10. Favorite Numbers: Modify your program from Exercise 6-2 (page 102) so each person can have more than one favorite number . Then print each person’s name along with their favorite numbers .
favourite_numbers = {
  'krishna': [1, 2, 3, 4, 5],
  'radha': [2, 3, 4, 5, 6],
  'shiva': [3, 4, 5, 6, 7],
  'ganesha': [4, 5, 6, 7, 8],
  'hanuman': [5, 6, 7, 8, 9],
}
for name, numbers in favourite_numbers.items():
  print(f"{name.title()}'s favourite numbers are {numbers}.")

print("\n")

#6-11. Cities: Make a dictionary called cities . Use the names of three cities as keys in your dictionary . Create a dictionary of information about each city and include the country that the city is in, its approximate population, and one fact about that city . The keys for each city’s dictionary should be something like country, population, and fact . Print the name of each city and all of the infor- mation you have stored about it .
cities = {
  'vrindavan': {'country': 'india', 'population': '1.5 million', 'fact': 'It is Radha maa\'s hometown'},
  'dwarka': {'country': 'india', 'population': '1.2 million', 'fact': 'It is where Krishna lives'},
  'puri': {'country': 'india', 'population': '1.5 million', 'fact':'It is where Jaga lives'}
  }
for city, info in cities.items():
  print(f"\n{city.title()} is in {info['country'].title()}, has a population of {info['population']} and a fact about it is {info['fact']}.")
